(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{743:function(t,a,s){"use strict";s.r(a);var r=s(18),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"网络编程第3章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络编程第3章"}},[t._v("#")]),t._v(" 网络编程第3章")]),t._v(" "),s("h2",{attrs:{id:"目标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#目标"}},[t._v("#")]),t._v(" 目标")]),t._v(" "),s("p",[t._v("写一个带有过滤功能的http代理")]),t._v(" "),s("h2",{attrs:{id:"公共函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公共函数"}},[t._v("#")]),t._v(" 公共函数")]),t._v(" "),s("h3",{attrs:{id:"htonl和htos"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#htonl和htos"}},[t._v("#")]),t._v(" htonl和htos")]),t._v(" "),s("p",[t._v("地址转化?, 常见参数为 INADDR_ANY")]),t._v(" "),s("h2",{attrs:{id:"tcp套接字函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp套接字函数"}},[t._v("#")]),t._v(" TCP套接字函数")]),t._v(" "),s("p",[t._v("这部分内容需要自己去仔细看下, 看函数和参数代表的意思")]),t._v(" "),s("h3",{attrs:{id:"close"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#close"}},[t._v("#")]),t._v(" close")]),t._v(" "),s("p",[t._v("申请关闭, 传输完成再关闭")]),t._v(" "),s("h3",{attrs:{id:"shutdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shutdown"}},[t._v("#")]),t._v(" shutdown")]),t._v(" "),s("p",[t._v("强制关, 可以分别关闭read 和 write边的")]),t._v(" "),s("h3",{attrs:{id:"read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#read"}},[t._v("#")]),t._v(" read")]),t._v(" "),s("h3",{attrs:{id:"send"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#send"}},[t._v("#")]),t._v(" send")]),t._v(" "),s("h3",{attrs:{id:"recv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recv"}},[t._v("#")]),t._v(" recv")]),t._v(" "),s("h2",{attrs:{id:"tcp套接字编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp套接字编程"}},[t._v("#")]),t._v(" TCP套接字编程")]),t._v(" "),s("p",[t._v("上面的函数的组合使用")]),t._v(" "),s("p",[t._v("cmd命令 列出exe结尾的文件 命令")]),t._v(" "),s("p",[t._v("dir *.exe")]),t._v(" "),s("h2",{attrs:{id:"udp套接字编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp套接字编程"}},[t._v("#")]),t._v(" UDP套接字编程")]),t._v(" "),s("h3",{attrs:{id:"udp函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#udp函数"}},[t._v("#")]),t._v(" UDP函数")]),t._v(" "),s("h4",{attrs:{id:"sendto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sendto"}},[t._v("#")]),t._v(" sendto")]),t._v(" "),s("p",[t._v("指明发送到的服务器的地址")]),t._v(" "),s("h4",{attrs:{id:"recvfrom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recvfrom"}},[t._v("#")]),t._v(" recvfrom")]),t._v(" "),s("p",[t._v("指明数据包来源地址")]),t._v(" "),s("h4",{attrs:{id:"connect"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#connect"}},[t._v("#")]),t._v(" connect")]),t._v(" "),s("p",[t._v("tcp中这个函数用于三次握手")]),t._v(" "),s("p",[t._v("udp中可以用来记录通信双方的 ip: port 信息")]),t._v(" "),s("h3",{attrs:{id:"与tcp的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与tcp的区别"}},[t._v("#")]),t._v(" 与TCP的区别")]),t._v(" "),s("p",[t._v("UDP不建立连接, 只能先客户端发数据")]),t._v(" "),s("h2",{attrs:{id:"网络编程第5章-并发服务器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络编程第5章-并发服务器"}},[t._v("#")]),t._v(" 网络编程第5章 并发服务器")]),t._v(" "),s("h3",{attrs:{id:"创建进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建进程"}},[t._v("#")]),t._v(" 创建进程")]),t._v(" "),s("h4",{attrs:{id:"fork函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fork函数"}},[t._v("#")]),t._v(" fork函数")]),t._v(" "),s("p",[t._v("父进程执行fork函数后, 父进程继续执行后面的代码, 父进程返回子进程pid, 子进程返回0进程创建成功, -1表示出错")]),t._v(" "),s("p",[t._v("子进程执行fork后的代码.")]),t._v(" "),s("p",[t._v("此代码会创建几个进程")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fork")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("三个进程")]),t._v(" "),s("p",[t._v("父进程")]),t._v(" "),s("p",[t._v("​\t\t1  2")]),t._v(" "),s("p",[t._v("​\t\t1")]),t._v(" "),s("h2",{attrs:{id:"_8-io"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-io"}},[t._v("#")]),t._v(" 8. IO")]),t._v(" "),s("h3",{attrs:{id:"_8-1-io复用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-io复用"}},[t._v("#")]),t._v(" 8.1 IO复用")]),t._v(" "),s("h4",{attrs:{id:"_8-1-1-select函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-1-select函数"}},[t._v("#")]),t._v(" 8.1.1 select函数")])])}),[],!1,null,null,null);a.default=e.exports}}]);